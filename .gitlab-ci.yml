stages:
  - build
  - release

# Este trabajo compila el programa
build:
  stage: build
  image: archlinux:latest
  script:
    - pacman -Syu --noconfirm
    - pacman -S --noconfirm python python-pip python-pyqt6 binutils
    - pip install pyinstaller --break-system-packages
    - pyinstaller --onefile --windowed --name DoomLauncher-Linux doom_launcher_qt.py
  artifacts:
    # Guarda la carpeta 'dist' que contiene el ejecutable
    paths:
      - dist/
    expire_in: 1 day
  rules:
    # Se ejecuta en la rama main (para probar) y en los tags (para publicar)
    - if: '$CI_COMMIT_BRANCH == "main" || $CI_COMMIT_TAG'

# Este trabajo crea el Release y adjunta el archivo
release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  needs:
    # Descarga el artefacto (la carpeta 'dist') del trabajo 'build'
    - job: build
      artifacts: true
  script:
    # Renombramos el ejecutable para que incluya la versión del tag
    - mv dist/DoomLauncher-Linux dist/DoomLauncher-Linux-$CI_COMMIT_TAG
  artifacts:
    # Es crucial definir el artefacto aquí también para que el release lo pueda "ver"
    paths:
      - dist/
  release:
    # Esta sección ahora sí tomará el artefacto del mismo trabajo y lo adjuntará
    name: 'Release $CI_COMMIT_TAG'
    description: 'Lanzamiento automático de la versión $CI_COMMIT_TAG. El ejecutable se encuentra adjunto.'
    tag_name: '$CI_COMMIT_TAG'
  rules:
    # Se ejecuta solo cuando empujas un nuevo tag
    - if: $CI_COMMIT_TAG

