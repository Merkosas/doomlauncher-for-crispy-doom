stages:
  - build
  - release

# Este trabajo compila el programa
build:
  stage: build
  image: archlinux:latest
  script:
    - pacman -Syu --noconfirm
    - pacman -S --noconfirm python python-pip python-pyqt6 binutils
    - pip install pyinstaller --break-system-packages
    # El nombre del ejecutable ahora incluye la versión del tag (limpia para nombres de archivo)
    - pyinstaller --onefile --windowed --name DoomLauncher-Linux-$CI_COMMIT_REF_SLUG doom_launcher_qt.py
  artifacts:
    paths:
      - dist/
    expire_in: 1 day
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" || $CI_COMMIT_TAG'

# Este trabajo crea el Release y adjunta el archivo del trabajo 'build'
release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  needs:
    # Solo necesitamos asegurarnos de que 'build' termine. No descargamos su artifact.
    - job: build
  script:
    - echo "Publicando el release..."
    # Este es el comando explícito, el poderoso :o. Crea el release y le adjunta un enlace directo al artefacto
    - |
      release-cli create --name "Release $CI_COMMIT_TAG" --tag-name "$CI_COMMIT_TAG" \
        --description "Lanzamiento automático de la versión $CI_COMMIT_TAG. Descarga el ejecutable desde los assets." \
        --assets-link "{\"name\":\"DoomLauncher-Linux-${CI_COMMIT_TAG}\",\"url\":\"${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/jobs/artifacts/${CI_COMMIT_TAG}/raw/dist/DoomLauncher-Linux-${CI_COMMIT_REF_SLUG}?job=build\"}"
  rules:
    # Se ejecuta solo cuando empujas un nuevo tag
    - if: $CI_COMMIT_TAG

