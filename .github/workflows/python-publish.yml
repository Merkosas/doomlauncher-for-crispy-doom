# Este workflow subirá un paquete de Python a PyPI cuando se cree una release.
name: Upload Python Package to PyPI

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  release-build:
    runs-on: ubuntu-latest

    steps:
      # 1. Clona el repositorio.
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Configura el entorno de Python.
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # 3. Instala las herramientas de empaquetado.
      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel

      # 4. Construye los paquetes de distribución.
      # Se ejecuta desde la raíz del repo, donde está setup.py.
      # CORRECCIÓN: Se eliminó la línea "working-directory".
      - name: Build release distributions
        run: |
          python setup.py sdist bdist_wheel

      # 5. Sube los paquetes construidos (la carpeta 'dist') como un artefacto.
      - name: Upload distributions as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          # CORRECCIÓN: La ruta correcta es simplemente "dist/"
          path: dist/

  pypi-publish:
    needs:
      - release-build
    runs-on: ubuntu-latest
    permissions:
      id-token: write # Necesario para la publicación confiable (trusted publishing).

    environment:
      name: pypi
      url: https://pypi.org/p/doomlauncher-for-crispy-doom

    steps:
      # 1. Descarga los artefactos que el job anterior subió.
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      # 2. Publica los paquetes en PyPI.
      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
