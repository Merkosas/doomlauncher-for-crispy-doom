# Este workflow subirá un paquete de Python a PyPI cuando se cree una release.
# Para más información, visita: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# Este workflow utiliza actions que no están certificadas por GitHub.
# Son provistas por un tercero y se rigen por términos de servicio,
# política de privacidad y documentación de soporte separados.

name: Upload Python Package to PyPI

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  release-build:
    runs-on: ubuntu-latest

    steps:
      # 1. Clona el repositorio en el runner de Actions.
      # Esto crea una carpeta llamada 'doomlauncher-for-crispy-doom'.
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Configura el entorno de Python.
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # 3. Instala las herramientas de empaquetado.
      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel

      # 4. Construye los paquetes de distribución.
      # Se ejecuta desde dentro de la carpeta del repo para encontrar 'setup.py'.
      - name: Build release distributions
        working-directory: ./doomlauncher-for-crispy-doom
        run: |
          python setup.py sdist bdist_wheel

      # 5. Sube los paquetes construidos (la carpeta 'dist') como un artefacto.
      # Esto permite que el siguiente job ('pypi-publish') pueda descargarlos.
      - name: Upload distributions as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: ./doomlauncher-for-crispy-doom/dist/

  pypi-publish:
    # Este job depende de que 'release-build' termine exitosamente.
    needs:
      - release-build
    runs-on: ubuntu-latest
    permissions:
      # Este permiso es OBLIGATORIO para la publicación confiable (trusted publishing).
      id-token: write

    # Se recomienda usar entornos dedicados para la publicación.
    environment:
      name: pypi
      # URL opcional para que aparezca un enlace en los logs de GitHub Actions.
      url: https://pypi.org/p/doomlauncher-for-crispy-doom

    steps:
      # 1. Descarga los artefactos (los paquetes) que el job anterior subió.
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      # 2. Publica los paquetes en el índice de PyPI.
      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          # El directorio de paquetes ahora es 'dist/' en la raíz de este job,
          # gracias al paso de descarga anterior.
          packages-dir: dist/
